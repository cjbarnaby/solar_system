// DO SOMETHING LIKE THIS:

// $planets: (
//   "mercury": (
//     "distance": 0.39
//   ),
//   "venus": (
//     "distance": 0.72
//   ),
//   "earth": (
//     "distance": 1.00
//   )
// );
//
// @each $planet, $data in $planets {
//   .#{$planet} {
//     width: map-get(map-get($planets, #{$planet}), "distance");
//   }
// }

$bodies: (
  "sun": (
    "radius": 109.00,
    "rotation_period": 27.00,
    "rotation": "prograde"
  ),
  "mercury": (
    "orbits": "sun",
    "distance": 0.39,
    "radius": 0.38,
    "rotation_period": 58.80,
    "rotation": "prograde",
    "days_per_year": 87.97,
    "color": gainsboro
  ),
  "venus": (
    "orbits": "sun",
    "distance": 0.72,
    "radius": 0.95,
    "rotation_period": 244.00, // note - retrograde rotation
    "rotation": "retrograde",
    "days_per_year": 224.70,
    "color": papayawhip
  ),
  "earth": (
    "orbits": "sun",
    "distance": 1.00,
    "radius": 1.00,
    "rotation_period": 1.00,
    "rotation": "prograde",
    "days_per_year": 364.25,
    "color": deepskyblue
  ),
  "mars": (
    "orbits": "sun",
    "distance": 1.50,
    "radius": 0.53,
    "rotation_period": 1.03,
    "rotation": "prograde",
    "days_per_year": 686.98,
    "color": firebrick
  ),
  "jupiter": (
    "orbits": "sun",
    "distance": 5.20,
    "radius": 11.00,
    "rotation_period": 0.411,
    "rotation": "prograde",
    "days_per_year": 4332.82,
    "color": sandybrown
  ),
  "saturn": (
    "orbits": "sun",
    "distance": 9.50,
    "radius": 9.00,
    "rotation_period": 0.428,
    "rotation": "prograde",
    "days_per_year": 10755.70,
    "color": tan
  ),
  "uranus": (
    "orbits": "sun",
    "distance": 19.20,
    "radius": 4.00,
    "rotation_period": 0.748,
    "rotation": "retrograde",
    "days_per_year": 30687.15,
    "color": powderblue
  ),
  "neptune": (
    "orbits": "sun",
    "distance": 30.10,
    "radius": 4.00,
    "rotation_period": 0.802,
    "rotation": "prograde",
    "days_per_year": 60190.03,
    "color": royalblue
  )
);




$earth_radius: 20px;
$astronomical_unit: 200px;  // distance from sun to earth (AU)
$time_multiplier: 1s; // time per earth day
$retrograde_orbits: "venus", "uranus";

// distance from sun in astronomical units (1AU = distance from sun to earth)
$distances: (
  "mercury": 0.39,
  "venus": 0.72,
  "earth": 1.00,
  "mars": 1.50,
  "jupiter": 5.20,
  "saturn": 9.50,
  "uranus": 19.20,
  "neptune": 30.10,
  "pluto": 39.50
);

// radius of body (in earth radii)
$radii: (
  "mercury": 0.38,
  "venus": 0.95,
  "earth": 1.00,
  "mars": 0.53,
  "jupiter": 11.00,
  "saturn": 9.00,
  "uranus": 4.00,
  "neptune": 4.00,
  "pluto": 0.18
);

// time taken to complete one revolution around own axis (in earth days)
$rotation_periods: (
  "mercury": 58.80,
  "venus": 244.00,  //note - negative 244, rotation is retrograde
  "earth": 1.00,
  "mars": 1.029,
  "jupiter": 0.411,
  "saturn": 0.428,
  "uranus": 0.748,  //note - negative .748, rotation is retrograde
  "neptune": 0.802,
  "pluto": 0.267
);

// in earth days
$days_per_year: (
  "mercury": 87.97,
  "venus": 224.7,
  "earth": 365,
  "mars": 686.98,
  "jupiter": 4332.82,
  "saturn": 10755.7,
  "uranus": 30687.15,
  "neptune": 60190.03,
  "pluto": 90553.00
);

$colors: (
  "mercury": palegoldenrod,
  "venus": goldenrod,
  "earth": lightblue,
  "mars": darkred,
  "jupiter": orange,
  "saturn": sienna,
  "uranus": aqua,
  "neptune": blue,
  "pluto": grey
);

@each $planet, $period in $rotation_periods {
  .#{$planet} .planet {
    width: (map-get($radii, #{$planet}) * $earth_radius);
    height: (map-get($radii, #{$planet}) * $earth_radius);
    animation: ($period * $time_multiplier) linear infinite if(index($retrograde_orbits, $planet), retrograde_spin, spin);
    transform: translate(-50%, -50%);
    background-color: (map-get($colors, #{$planet}));
  }
}

@each $planet, $days_per_orbit in $days_per_year {
  .#{$planet} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: (map-get($distances, $planet) * $astronomical_unit);
    height: (map-get($distances, $planet) * $astronomical_unit);

    .planet_container {
      height: 100%;
      width: 100%;
      position: absolute;
      animation: ($days_per_orbit * $time_multiplier) linear infinite #{$planet}-orbit;
      top: (map-get($distances, $planet) * $astronomical_unit) / 2;
      @keyframes #{$planet}-orbit {
        from {
          transform: rotate(0deg) translateX((map-get($distances, #{$planet}) * $astronomical_unit) / 2) rotate(0deg);
        } to {
          transform: rotate(360deg) translateX((map-get($distances, #{$planet}) * $astronomical_unit) / 2) rotate(-360deg);
        }
      }
      .planet_shadow {
        width: (map-get($radii, #{$planet}) * $earth_radius);
        height: (map-get($radii, #{$planet}) * $earth_radius);
        box-shadow: inset ((map-get($radii, #{$planet}) * $earth_radius) / -4) 0px 0px 0px (map-get($colors, #{planet}));
        opacity: 0.5;
        animation: ($days_per_orbit * $time_multiplier) linear infinite #{$planet}-shadow;
        @keyframes #{$planet}-shadow {
          from {
            transform: translate(-50%, -50%) rotate(0deg);
          } to {
            transform: translate(-50%, -50%) rotate(360deg);
          }
        }
      }
    }
  }
}


body {
  margin: 0;
  padding: 0;
}
.container {
  width: 100vw;
  height: 100vh;
  background-color: black;
  // position: relative;
  // overflow: hidden;
}

.system {
  background-color: black;
  width: $astronomical_unit * 79;
  height: $astronomical_unit * 79;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.sun {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: radial-gradient(#ffd000 1%, #f9b700 39%, #f9b700 39%, #e06317 100%);
  box-shadow: 0 0 12px 2px rgba(255, 70, 0, 0.4), 0 0 40px 20px rgba(255, 107, 0, 0.4), 0 0 20px 50px rgba(255, 203, 0, 0.13);
}

.line {
  width: 1px;
  height: 50%;
  background-color: black;
  margin: 0 auto;
}

.orbit {
  border: 1px solid rgba(255,255,255,0.2);
  border-radius: 50%;
  position: absolute;
  height: 100%;
  width: 100%;
}

.planet,.planet_shadow {
  border-radius: 50%;
  position: absolute;
  left: 50%;

}


@keyframes spin {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  } to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes retrograde_spin {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  } to {
    transform: translate(-50%, -50%) rotate(-360deg);
  }
}
